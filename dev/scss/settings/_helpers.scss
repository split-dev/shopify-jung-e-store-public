// --------------------------------------------------
// event wrapper

@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

// --------------------------------------------------
// contexts

@mixin when-inside($selector) {
  #{$selector} & {
    @content;
  }
}

// --------------------------------------------------
// font size

@function calculate-rem($size) {
  $rem-size: $size / 16px;
  @return $rem-size * 1rem;
}

@mixin font-size($size) {
  font-size: calculate-rem($size);
}

// --------------------------------------------------
// svg background image

$image-path: '{{ asset_url }}' !default;

@mixin background-svg($name, $size: false) {
  background-image: url( #{'{{ "#{$name}.svg" | asset_url }}'} );

  @if ($size) {
    background-size: $size;
  }
}

// --------------------------------------------------
// fonts

@mixin font-file($asset-font-name) {
  src: url('{{ "#{$asset-font-name}.eot" | asset_url }}');
  src: url('{{ "#{$asset-font-name}.eot" | asset_url }}?#iefix') format("embedded-opentype"),
    url('{{ "#{$asset-font-name}.woff" | asset_url }}') format("woff"),
    url('{{ "#{$asset-font-name}.ttf" | asset_url }}') format("truetype"),
    url('{{ "#{$asset-font-name}.svg" | asset_url }}') format("svg");
}

// --------------------------------------------------
// aspect ratio
// e.g. @include aspect-ratio(16,9);
// expects child to have class of `.content` (could be replaced with a wildcard `*`)

@mixin aspect-ratio($width, $height) {
  position: relative;

  &::before {
    content: '';
    display: block;
    padding-top: ($height / $width) * 100%;
    width: 100%;
  }

  > .content {
    bottom: 0;
    left: 0;
    position: absolute;
    right: 0;
    top: 0;
  }
}

@mixin animateBluredShowText($color, $name) {
  @keyframes blurSlide-#{$name} {
    0% { 
      background: linear-gradient(180deg, $color 30%, rgba(0,0,0,0) 40%, rgba(0,0,0,0) 100%);
      background-size: 100% 0%;
      background-repeat: no-repeat;
      background-position-y: 0;
      -webkit-background-clip: text;
      -moz-background-clip: text;
      -webkit-text-fill-color: transparent;
      -moz-text-fill-color: transparent;
      transform: translateY(20%);
    }
    100% { 
      background: linear-gradient(180deg, $color 30%, rgba(0,0,0,0) 40%, rgba(0,0,0,0) 100%);
      background-size: 100% 400%;
      background-repeat: no-repeat;
      background-position-y: 0;
      -webkit-background-clip: text;
      -moz-background-clip: text;
      -webkit-text-fill-color: transparent;
      -moz-text-fill-color: transparent;
      transform: translateY(0%);
    }
  }

  @keyframes blurSlideHide-#{$name} {
    0% { 
      background: linear-gradient(180deg, $color 30%, rgba(0,0,0,0) 40%, rgba(0,0,0,0) 100%);
      background-size: 100% 400%;
      background-repeat: no-repeat;
      background-position-y: 0;
      -webkit-background-clip: text;
      -moz-background-clip: text;
      -webkit-text-fill-color: transparent;
      -moz-text-fill-color: transparent;
      transform: translateY(0%);
    }
    100% { 
      background: linear-gradient(180deg, $color 30%, rgba(0,0,0,0) 40%, rgba(0,0,0,0) 100%);
      background-size: 100% 0%;
      background-repeat: no-repeat;
      background-position-y: 0;
      -webkit-background-clip: text;
      -moz-background-clip: text;
      -webkit-text-fill-color: transparent;
      -moz-text-fill-color: transparent;
      transform: translateY(20%);
    }
  }
}

@mixin bluredShowTextInitialState($color) {
  background: linear-gradient(180deg, $color 30%, rgba(0,0,0,0) 40%, rgba(0,0,0,0) 100%);
  background-size: 100% 0%;
  background-repeat: no-repeat;
  background-position-y: 0;
  -webkit-background-clip: text;
  -moz-background-clip: text;
  -webkit-text-fill-color: transparent;
  -moz-text-fill-color: transparent;
}

@mixin setAnimationBluredShowText($name) {
  animation-name: blurSlide-#{$name};
  animation-duration: 500ms;
  animation-delay: 200ms;
  animation-timing-function: linear;
  animation-fill-mode: both;
}
@mixin setAnimationBluredHideText($name) {
  animation-name: blurSlideHide-#{$name};
  animation-duration: 500ms;
  animation-delay: 200ms;
  animation-timing-function: linear;
  animation-fill-mode: both;
}